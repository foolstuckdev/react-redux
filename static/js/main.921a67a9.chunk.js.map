{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","style","marginBottom","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACW,IAAD,OACR,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BAAQA,UAAU,oBAAoBG,QAAU,WAAO,EAAKP,MAAMQ,WAAWL,KAA7E,WAIJ,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAO3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAjB/BC,IAAMC,WA0BdC,eALS,SAAAC,GAEpB,MAAO,CAACZ,MAAOY,EAAMZ,SAGe,CAAEO,WC9BhB,SAACL,GACvB,MAAM,CACFW,KAAM,gBACNC,QAASZ,KD2BFS,CAAyCd,GEXzCc,eAJS,SAAAC,GACtB,MAAO,CAAEV,KAAMU,EAAMG,gBAGRJ,EAhBI,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACpB,OAAKA,EAIH,6BACE,2CAAiBA,EAAKG,OACtB,6CAAmBH,EAAKc,WALnB,qECkBIC,EAnBH,WACV,OACE,6BACA,yBAAKd,UAAU,uBAAuBe,MAAO,CAACC,aAAc,QAA5D,mBACA,yBAAKhB,UAAU,qBAEb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,WCIKiB,cAAgB,CAC3BpB,MAlBiB,WACjB,MAAO,CACH,CAACK,MAAO,2BAA4BW,SAAU,QAC9C,CAACX,MAAO,sBAAuBW,SAAU,QACzC,CAACX,MAAO,qBAAsBW,SAAU,QACxC,CAACX,MAAO,oBAAqBW,SAAU,UAc3CD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMM,EAAW,uCACzD,MAAmB,kBAAhBA,EAAOR,KACCQ,EAAOP,QAGXC,KCRXO,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.921a67a9.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends React.Component{\n    renderList(){\n        return this.props.songs.map((song)=> {\n            return (\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button className=\"ui button primary\" onClick={ () => {this.props.selectSong(song)} }>\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">{song.title}</div>\n                </div>\n            );\n        })\n    }\n\n    render(){\n        return <div className=\"ui divided list\">{this.renderList()}</div>\n    }\n}\n\nconst mapStateToProps = state => {\n    //return state;\n    return {songs: state.songs}\n}\n\nexport default connect(mapStateToProps, { selectSong })(SongList);","export const selectSong = (song) => {\n    return{\n        type: 'SONG_SELECTED',\n        payload: song\n    };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Please select a song for details!</div>;\n  }\n  return (\n    <div>\n      <h4>Song title: {song.title}</h4>\n      <p>Song duration: {song.duration}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { song: state.selectedSong };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from \"react\";\nimport SongList from \"./SongList\";\nimport SongDetail from \"./SongDetail\";\n\nconst App = () => {\n  return (\n    <div>\n    <div className=\"ui segment container\" style={{marginBottom: \"5vh\"}}>react-redux 101</div>\n    <div className=\"ui container grid\">\n      \n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers} from 'redux'; // export can be default vs named (here)\n\nconst songsReducer = () => {\n    return [\n        {title: 'The Way You Look Tonight', duration: '3:22'},\n        {title: 'Welcome to My World', duration: '2:22'},\n        {title: 'Fly Me To The Moon', duration: '2:27'},\n        {title: 'The Glory of Love', duration: '2:49'},\n    ];\n}\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if(action.type === 'SONG_SELECTED'){\n        return action.payload\n    };\n\n    return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}